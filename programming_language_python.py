# -*- coding: utf-8 -*-
"""programming-language-python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AcCbnCKcQTmLrVDCcQ9w2GUUNcD7QTQe
"""

print ('Hello World')

print ('     /|')
print ('    / |')
print ('   /  |')
print ('  /   |')
print (' /____|')

name="Zahid"		 #string type
age=26 			#integer type
print("My Name is "+name+" and my age is "+str(age))
#My name is Zahid and my age is 26

name="Zahid" #string type
age=26 #integer type
flag=True #boolean type
print("My name is "+name+" and my age is "+str(age)+" and the statement is "+str(flag)) #string & integer & boolean printing together
#My name is Zahid and my age is 26 and the statement is True

cgpa=3.60 #float type
print("My Result is "+str(cgpa)) #float & string print together
#My Result is 3.6

name="Zahid"
age=26
cgpa=3.60
flag=True

cgpa=int(cgpa) #float to integer type casting
print(cgpa) #3

age=str(age) #int to string type casting
print(age) #26

age=float(age) #string to float type casting
print(age) #26.0

print("My name is\nZahid")
#My name is
#Zahid

print("I completed PGD from \"BAU\"")
#I completed PGD from "BAU"

phrase="MIT"
print(phrase.lower()+"  is Cool") #mit is cool
print(phrase.upper()+"  is Cool") #MIT is cool

print(phrase.isupper()) #True
print(phrase.islower()) #False

phrase="Very Spooky"
print(phrase.upper().islower()) #False

phrase="Mit"
print(len(phrase)) #3

phrase="Massachusetts Institute of Technology"
print(phrase[0]) #M
print(phrase[5]) #c
print(phrase[-1]) #y
print(phrase.index("T")) #27
print(phrase.index("Ins")) #14

word = 'Did coding'
print(word[0:2])  # characters from position 0 (included) to 2 (excluded)
#Di
print(word[2:5])  # characters from position 2 (included) to 5 (excluded)
#d c
print(word[:2])   # character from the beginning to position 2 (excluded)
#Di
print(word[4:])   # characters from position 4 (included) to the end
#coding
print(word[-2:])  # characters from the second-last (included) to the end
#ng
print(word[:2] + word[2:])#Did coding
print(word[:4] + word[4:])#Did coding

phrase="Massachusetts Institute of Technology"
print(phrase.replace("Massachusetts","Indian"))
#Indian Institute of Technology

print(3)#3
print(3.60)#3.6
print(-3.60)#-3.6
print(3.60+3)#6.6
print(6.60/3)#2.1999999999999997
print(6.60//3)#2.0 #floor division
print(1.60*3)#4.800000000000001
print(2**2)#4
print(8.60-3)#5.6
print(3*(4+5))#27
print(20%3)#2

num=5
print("My roll is "+str(num)) #need to type cast integer while printing with string
#My roll is 5

from math import *

my_num=-5
print(abs(my_num)) #-5
print(pow(2,2)) #4
print(max(3,4,5,7)) #7 
print(min(2,3,1,-1)) #-1
print(round(4.50)) #5
print(ceil(4.30))#5
print(floor(4.70))#4
print(sqrt(36))#6

name=input("Please Enter Your Name \n")
age=input("Please Enter Your Age \n")
print(name+" : "+age)

numOne=input("Enter the first number \n")
numTwo=input("Enter the second number \n")
result=int(numOne)+float(numTwo) #need to type cast
print(result)

name=input("Enter your name \n")
age=input("Enter your age \n")
cgpa=input("Enter your cgpa \n")
print("My name is "+name)
print("My age is "+age)
print("My cgpa is "+cgpa)

myList= ["Spiderman",2022,True,"Ironman","Xmen"]
print(myList)
print(myList[0])
print(myList[-1]) #last index : Xmen

myList= ["Spiderman",2022,True,"Ironman","Xmen"] 
print(myList[1:4]) #inclusive 1 to Exclusive 4
print(myList[1:]) #inclusive 1 to the end
print(myList[:3])#inclusive 0 to Exclusive 3

myList= ["Spiderman",2022,True,"Ironman","Xmen"]
myList[4]="Harry Potter"
print(myList) #['Spiderman', 2022, True, 'Ironman', 'Harry Potter']

myList= ["Spiderman",2021,True]
yourList = ["Doctor Strange",2022,True]
myList.extend(yourList);
print(myList) #['Spiderman', 2021, True, 'Doctor Strange', 2022, True]

myList= ["Spiderman",2021,True]
myList.append(False);
print(myList) #['Spiderman', 2021, True, False]

x=[1,2,3]
y=[4,5,6]
z=x+y
print(z) #[1, 2, 3, 4, 5, 6]

myList= ["Spiderman",2021,True,3.60]
myList.insert(1,2020) #inserting 2020 in position 1
myList.remove(3.60) #remove 3.60 from the list

myList=["Spiderman",2021,True,3.60]
myList.pop()  #pop out the last data
myList.clear() #clear all data

myList= ["Spiderman",2021,True,3.60,"Doctor Strange",2022,3.60]
print(myList.count(3.60)) #2

myList= [55,11,77,22,99,44,33]
myList.sort()
myList.reverse()
print(myList) #[99, 77, 55, 44, 33, 22, 11]

myList= [55,11,77,22,99,44,33]
yourList=myList.copy()

tupleCollection = (11,22,33,44,55,66,77,88,99,110)
print(tupleCollection[4]) #access tuple
#tupleCollection[3]=121 #not possible â€“ cant change or modify

tupleCollection = [(11,22),(33,44),(55,66),(77,88)]
print(tupleCollection[1][0])#access

def custom_Func():
    print("This is a Custom Function for checking")
print("Before the Custom Function")
custom_Func()
print("After the Custom Function")

def custom_Func(name,age):
    print("My Name is "+name+". And my age is "+str(age))
custom_Func("Zahid",18)

def square(num):
    return num*num*num
value =square(3)
print(value)

is_male = False
is_tall = True
if is_male and is_tall:
    print("Tall and Dashing Boy")
elif not(is_male) and is_tall:
    print("Tall but beautiful Girl")
elif not(is_male) and not(is_tall):
    print("Short Girl")
elif is_male or is_tall:
    print("Male or Tall or both")
else:
    print("3rd Gender")

def maxNumber(numOne,numTwo,numThree):
    if numOne>=numTwo and numOne>=numThree:
        print(str(numOne)+" is greater")
    elif numTwo>=numOne and numTwo>=numThree:
        print(str(numTwo)+" is greater")
    elif numThree>=numOne and numThree>=numTwo:
        print(str(numThree)+" is greater")
    elif numOne==numTwo and numTwo==numThree:
        print("All are equal")
maxNumber(11,11,11)

def checkEquality(numOne,numTwo):
    if numOne!=numTwo:
        print("Not Equal")
    elif numTwo==numOne:
        print("Equal")
checkEquality(11,11)

numberOne = int(input("Please Enter Number One"))
numberTwo = int(input("Please Enter Number Two"))
operator = input("Please Enter operator")
def calculate(numberOne,numberTwo):
    if operator == "+":
        return numberOne+numberTwo
    elif operator == "-":
        return numberOne-numberTwo
    elif operator == "*":
        return numberOne*numberTwo
    elif operator == "/":
        return numberOne/numberTwo
result=calculate(numberOne,numberTwo)
print("The result is "+str(result))

Information={
    "name":"Md. Zahidur Rahman",
    "program":"Post Graduate Diploma in Information and Communication Technology",
    "id":"PGD1727",
    "campus":"Bangladesh Agriculture University",
    "department":"Computer Science & Mathematics",
    "faculty": "Engineering & Technology"
}
print(Information['name'])
print(Information.get("id"))
print(Information.get("roll","Roll is not present")) #check the data presents or not